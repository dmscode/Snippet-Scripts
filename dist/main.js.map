{
  "version": 3,
  "sources": ["../package.json", "../src/main.ts", "../src/actions/RemoveZeroWidthChars.ts", "../src/actions/CorrectCase.ts", "../src/actions/EmojiMarkdown.ts", "../src/actions/WhiteSpace.ts"],
  "sourcesContent": ["{\r\n  \"name\": \"Snippet-Actions\",\r\n  \"version\": \"1.0.25\",\r\n  \"description\": \"\u6587\u672C\u7247\u6BB5\u5904\u7406\u5DE5\u5177\u96C6\u3002\",\r\n  \"main\": \"dist/main.js\",\r\n  \"repository\": \"https://github.com/dmscode/Snippet-Actions.git\",\r\n  \"author\": \"\u7A3B\u7C73\u9F20\",\r\n  \"scripts\": {\r\n    \"build\": \"yarn version --patch && node build.js\",\r\n    \"test\": \"jest\",\r\n    \"test:watch\": \"jest --watch\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@types/jest\": \"^29.5.14\",\r\n    \"esbuild\": \"^0.19.11\",\r\n    \"fs-extra\": \"^11.3.0\",\r\n    \"jest\": \"^29.7.0\",\r\n    \"jest-html-reporters\": \"^3.1.7\",\r\n    \"ts-jest\": \"^29.3.1\",\r\n    \"typescript\": \"^5.8.2\"\r\n  },\r\n  \"license\": \"UNLICENSED\"\r\n}\r\n", "// \u4F7F\u7528 require \u5BFC\u5165 package.json\r\nconst pkg = require('../package.json');\r\nimport { RemoveZeroWidthChars } from \"./actions/RemoveZeroWidthChars\";\r\nimport { CorrectCase } from \"./actions/CorrectCase\";\r\nimport { EmojiMarkdown } from \"./actions/EmojiMarkdown\";\r\nimport { WhiteSpace } from \"./actions/WhiteSpace\";\r\n\r\n/**\r\n * \u6587\u672C\u7247\u6BB5\u5904\u7406\u7C7B\r\n * \u63D0\u4F9B\u5355\u4E2A\u6216\u94FE\u5F0F\u5904\u7406\u6587\u672C\u7247\u6BB5\u7684\u529F\u80FD\r\n */\r\nexport class SnippetActions {\r\n    // \u53EF\u7528\u7684\u5904\u7406\u65B9\u6CD5\u96C6\u5408\r\n    actions = {\r\n        RemoveZeroWidthChars: {\r\n            name: '\u79FB\u9664\u96F6\u5BBD\u5B57\u7B26',\r\n            description: '\u79FB\u9664\u6587\u672C\u4E2D\u7684\u96F6\u5BBD\u5B57\u7B26',\r\n            action: RemoveZeroWidthChars,\r\n        },\r\n        CorrectCase: {\r\n            name: '\u4FEE\u6B63\u7279\u5B9A\u8BCD\u6C47\u7684\u5927\u5C0F\u5199',\r\n            description: '\u4FEE\u6B63\u6587\u672C\u4E2D\u7279\u5B9A\u8BCD\u6C47\u7684\u5927\u5C0F\u5199',\r\n            action: CorrectCase,\r\n        },\r\n        EmojiMarkdown: {\r\n            name: 'Markdown \u6587\u672C\u5316',\r\n            description: '\u5C06 Markdown \u8F6C\u6362\u4E3A\u7528 Emoji \u8FDB\u884C\u6807\u8BB0\u7684\u7EAF\u6587\u672C\u683C\u5F0F',\r\n            action: EmojiMarkdown,\r\n        },\r\n        WhiteSpace: {\r\n            name: '\u76D8\u53E4\u4E4B\u767D',\r\n            description: '\u5728\u4E2D\u6587\u548C\u82F1\u6587/\u6570\u5B57\u4E4B\u95F4\u6DFB\u52A0\u7A7A\u683C',\r\n            action: WhiteSpace,\r\n        }\r\n    }\r\n    workflows = {\r\n        Markdown: {\r\n            name: 'Markdown \u6587\u672C\u5316',\r\n            description: '\u5C06 Markdown \u8F6C\u6362\u4E3A\u7528 Emoji \u8FDB\u884C\u6807\u8BB0\u7684\u7EAF\u6587\u672C\u683C\u5F0F',\r\n            actions: ['RemoveZeroWidthChars', 'WhiteSpace', 'CorrectCase', 'EmojiMarkdown'],\r\n        },\r\n        Format: {\r\n            name: '\u683C\u5F0F\u5316',\r\n            description: '\u79FB\u9664\u96F6\u5BBD\u5B57\u7B26\u3001\u5728\u4E2D\u6587\u548C\u82F1\u6587/\u6570\u5B57\u4E4B\u95F4\u6DFB\u52A0\u7A7A\u683C',\r\n            actions: ['RemoveZeroWidthChars', 'WhiteSpace', 'CorrectCase'],\r\n        },\r\n    }\r\n    // \u5F85\u5904\u7406\u7684\u8F93\u5165\u6587\u672C\r\n    input: string;\r\n    // \u5904\u7406\u9009\u9879\r\n    options: any;\r\n    // \u7248\u672C\r\n    version = pkg.version;\r\n\r\n    /**\r\n     * \u521D\u59CB\u5316\u4EE3\u7801\u7247\u6BB5\u5904\u7406\u7C7B\r\n     * @param input \u8F93\u5165\u6587\u672C\uFF0C\u4E3A\u7A7A\u65F6\u9ED8\u8BA4\u4E3A\u7A7A\u5B57\u7B26\u4E32\r\n     */\r\n    constructor(input: string) {\r\n        this.input = input || '';\r\n    }\r\n\r\n    /**\r\n     * \u6267\u884C\u5355\u4E2A\u5904\u7406\u65B9\u6CD5\r\n     * @param actionName \u5904\u7406\u65B9\u6CD5\u540D\u79F0\r\n     * @returns \u5904\u7406\u540E\u7684\u7ED3\u679C\r\n     */\r\n    runAction(actionName: keyof typeof this.actions) {\r\n        // \u8C03\u7528\u6307\u5B9A\u7684\u5904\u7406\u65B9\u6CD5\u5E76\u8FD4\u56DE\u7ED3\u679C\r\n        return this.actions[actionName].action(this.input);\r\n    }\r\n\r\n    /**\r\n     * \u6267\u884C\u6307\u5B9A\u7684\u5DE5\u4F5C\u6D41\u7A0B\r\n     * @param workflowName \u5DE5\u4F5C\u6D41\u540D\u79F0\r\n     * @returns \u6309\u5DE5\u4F5C\u6D41\u4E2D\u5B9A\u4E49\u7684\u52A8\u4F5C\u987A\u5E8F\u5904\u7406\u540E\u7684\u7ED3\u679C\r\n     */\r\n    runWorkflow(workflowName: keyof typeof this.workflows) {\r\n        // \u83B7\u53D6\u5DE5\u4F5C\u6D41\u4E2D\u5B9A\u4E49\u7684\u52A8\u4F5C\u5217\u8868\u5E76\u6309\u987A\u5E8F\u6267\u884C\r\n        return this.chain(this.workflows[workflowName].actions as (keyof typeof this.actions)[]);\r\n    }\r\n\r\n    /**\r\n     * \u94FE\u5F0F\u8C03\u7528\u591A\u4E2A\u5904\u7406\u65B9\u6CD5\r\n     * @param actions \u5904\u7406\u65B9\u6CD5\u6570\u7EC4\r\n     * @returns \u5904\u7406\u540E\u7684\u7ED3\u679C\r\n     */\r\n    chain(actions: (keyof typeof this.actions)[]) {\r\n        // \u4F7F\u7528reduce\u4F9D\u6B21\u6267\u884C\u5904\u7406\u65B9\u6CD5\uFF0C\u5C06\u4E0A\u4E00\u6B65\u7684\u7ED3\u679C\u4F5C\u4E3A\u4E0B\u4E00\u6B65\u7684\u8F93\u5165\r\n        return actions.reduce((result, actionName) => {\r\n            return this.actions[actionName].action(result);\r\n        }, this.input);\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u6240\u6709\u53EF\u7528\u7684\u52A8\u4F5C\u5217\u8868\r\n     * @returns \u5305\u542B\u6240\u6709\u53EF\u7528\u52A8\u4F5C\u4FE1\u606F\u7684\u5BF9\u8C61\r\n     */\r\n    getActions() {\r\n        return Object.entries(this.actions).reduce((acc, [key, value]) => {\r\n            acc[key] = {\r\n                name: value.name,\r\n                description: value.description\r\n            };\r\n            return acc;\r\n        }, {} as Record<string, { name: string; description: string }>);\r\n    }\r\n    /**\r\n     * \u83B7\u53D6\u6240\u6709\u53EF\u7528\u7684\u5DE5\u4F5C\u6D41\u5217\u8868\r\n     * @returns \u5305\u542B\u6240\u6709\u53EF\u7528\u5DE5\u4F5C\u6D41\u4FE1\u606F\u7684\u5BF9\u8C61\uFF0C\u6BCF\u4E2A\u5DE5\u4F5C\u6D41\u5305\u542B name \u548C description \u5C5E\u6027\r\n     */\r\n    getWorkflows() {\r\n        // \u5C06\u5DE5\u4F5C\u6D41\u5BF9\u8C61\u8F6C\u6362\u4E3A\u4EC5\u5305\u542B name \u548C description \u7684\u7B80\u5316\u5BF9\u8C61\r\n        return Object.entries(this.workflows).reduce((acc, [key, value]) => {\r\n            acc[key] = {\r\n                name: value.name,\r\n                description: value.description\r\n            };\r\n            return acc;\r\n        }, {} as Record<string, { name: string; description: string }>);\r\n    }\r\n}", "/**\r\n * \u79FB\u9664\u5B57\u7B26\u4E32\u4E2D\u7684\u4E0D\u53EF\u89C1\u7684 Unicode \u63A7\u5236\u5B57\u7B26\r\n * \u4E3B\u8981\u7528\u4E8E\u5904\u7406\u5728\u5FAE\u4FE1\u4E2D\u8F93\u5165 Markdown \u5217\u8868\u65F6\uFF0C\u81EA\u52A8\u6DFB\u52A0\u7684\u4E0D\u53EF\u89C1 Unicode \u63A7\u5236\u5B57\u7B26\u5BFC\u81F4\u7684\u6E32\u67D3\u9519\u8BEF\u95EE\u9898\u3002\r\n * \r\n * @param {string} input - \u9700\u8981\u5904\u7406\u7684\u8F93\u5165\u5B57\u7B26\u4E32\r\n * @returns {string} \u79FB\u9664\u4E86\u96F6\u5BBD\u5B57\u7B26\u540E\u7684\u5B57\u7B26\u4E32\r\n */\r\nexport function RemoveZeroWidthChars(input: string): string {\r\n    // \u5982\u679C\u8F93\u5165\u4E3A\u7A7A\uFF0C\u76F4\u63A5\u8FD4\u56DE\u7A7A\u5B57\u7B26\u4E32\r\n    if (!input) return '';\r\n    // \u5B9A\u4E49\u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D\u6240\u6709\u9700\u8981\u79FB\u9664\u7684\u5B57\u7B26\uFF1A\r\n    // - \\u200B-\\u200F: \u96F6\u5BBD\u5B57\u7B26\u8303\u56F4\r\n    // - \\uFEFF: BOM\u6807\u8BB0\r\n    // - \\u061C: \u963F\u62C9\u4F2F\u5B57\u6BCD\u683C\u5F0F\u63A7\u5236\u5B57\u7B26\r\n    // - \\u2060-\\u2069: \u4E0D\u53EF\u89C1\u7684\u8FDE\u63A5\u7B26\u548C\u683C\u5F0F\u63A7\u5236\u5B57\u7B26\r\n    // - \\uFFF9-\\uFFFB: \u5185\u5D4C\u5BF9\u8C61\u63A7\u5236\u5B57\u7B26\r\n    const pattern = /[\\u200B-\\u200F\\uFEFF\\u061C\\u2060-\\u2069\\uFFF9-\\uFFFB]+/g;\r\n    \r\n    // \u4F7F\u7528\u6B63\u5219\u66FF\u6362\u79FB\u9664\u5339\u914D\u5230\u7684\u5B57\u7B26\r\n    return input.replace(pattern, '');\r\n}", "// \u5B9A\u4E49\u4E00\u4E2A\u5305\u542B\u9700\u8981\u4FDD\u6301\u6B63\u786E\u5927\u5C0F\u5199\u7684\u8BCD\u6C47\u8868\r\nconst CASE_SENSITIVE_WORDS = [\r\n    'AI',\r\n    'Obsidian',\r\n    'Excalidraw',\r\n    'Notion',\r\n    'Roam Research',\r\n    'Logseq',\r\n    'Typora',\r\n    'iOS',\r\n    'iPad',\r\n    'iPhone',\r\n    'Android',\r\n    'MacOS',\r\n    'Windows',\r\n    'Linux',\r\n    'Ubuntu',\r\n    'Fedora',\r\n    'Debian',\r\n    'CentOS',\r\n    'openSUSE',\r\n    'Arch',\r\n    'Gentoo',\r\n    'VS Code',\r\n    'Sublime Text',\r\n    'Atom',\r\n    'Vim',\r\n    'Emacs',\r\n    'Neovim',\r\n    'Trae',\r\n    'Cursor',\r\n    'Zettlr',\r\n];\r\n\r\n/**\r\n * \u521B\u5EFA\u4E00\u4E2A\u8BCD\u6C47\u6620\u5C04\u8868\uFF0C\u7528\u4E8E\u5B58\u50A8\u5355\u8BCD\u7684\u6B63\u786E\u5927\u5C0F\u5199\u5F62\u5F0F\r\n * @param dict \u5305\u542B\u6B63\u786E\u5927\u5C0F\u5199\u7684\u5355\u8BCD\u6570\u7EC4\r\n * @returns \u8FD4\u56DE\u4E00\u4E2AMap\u5BF9\u8C61\uFF0Ckey\u4E3A\u5C0F\u5199\u5355\u8BCD\uFF0Cvalue\u4E3A\u6B63\u786E\u5927\u5C0F\u5199\u5F62\u5F0F\r\n */\r\nconst wordMap = (dict:string[]):Map<string, string> => {\r\n    const map = new Map<string, string>();\r\n    dict.forEach(word => {\r\n        // \u6DFB\u52A0\u539F\u59CB\u5C0F\u5199\u5F62\u5F0F\r\n        map.set(word.toLowerCase(), word);\r\n        // \u6DFB\u52A0\u65E0\u7A7A\u683C\u53D8\u4F53\r\n        if(word.match(/\\s+/)) map.set(word.toLowerCase().replace(/\\s+/g, ''), word);\r\n    });\r\n    return map;\r\n};\r\n\r\n/**\r\n * \u4FEE\u6B63\u6587\u672C\u4E2D\u7279\u5B9A\u8BCD\u6C47\u7684\u5927\u5C0F\u5199\r\n * @param input \u8F93\u5165\u7684\u6587\u672C\u5B57\u7B26\u4E32\r\n * @returns \u4FEE\u6B63\u540E\u7684\u6587\u672C\u5B57\u7B26\u4E32\r\n */\r\nexport function CorrectCase(input: string, dict: string[] = CASE_SENSITIVE_WORDS): string {\r\n    // \u5982\u679C\u8F93\u5165\u4E3A\u7A7A\uFF0C\u76F4\u63A5\u8FD4\u56DE\u7A7A\u5B57\u7B26\u4E32\r\n    if (!input) return '';\r\n    // \u521B\u5EFA\u4E00\u4E2A\u8BCD\u6C47\u6620\u5C04\u8868\r\n    const dictMap = wordMap(dict);\r\n    // \u4F7F\u7528\u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D\u5E76\u66FF\u6362\u7279\u5B9A\u8BCD\u6C47\r\n    const pattern = new RegExp(`\\\\b(${Array.from(dictMap.keys()).join('|')})\\\\b`, 'gi');\r\n    return input.replace(pattern, match => dictMap.get(match.toLowerCase()) || match);\r\n}", "/**\r\n * Markdown \u6E32\u67D3\u5668\u7C7B\uFF0C\u7528\u4E8E\u5C06 Markdown \u6587\u672C\u8F6C\u6362\u4E3A\u5E26\u6709\u8868\u60C5\u7B26\u53F7\u88C5\u9970\u7684\u683C\u5F0F\r\n */\r\nclass markdownRender {\r\n    content: string\r\n    // \u5B9A\u4E49\u5904\u7406\u5668\u6570\u7EC4\uFF0C\u5305\u542B\u6807\u9898\u3001\u65E0\u5E8F\u5217\u8868\u548C\u6709\u5E8F\u5217\u8868\u7684\u5904\u7406\u65B9\u6CD5\r\n    handlers: any[] = [\r\n        this.titleHandler.bind(this),\r\n        this.codeBlockHandler.bind(this),\r\n        this.blockquoteHandler.bind(this),\r\n        this.hrHandler.bind(this),\r\n        this.unorderedListHandler.bind(this),\r\n        this.orderedListHandler.bind(this),\r\n        this.spanTextHandler.bind(this),\r\n        this.urlHandler.bind(this),\r\n    ]\r\n\r\n    constructor(content: string) {\r\n        this.content = content\r\n    }\r\n\r\n    /**\r\n     * \u6E32\u67D3\u65B9\u6CD5\uFF0C\u4F9D\u6B21\u6267\u884C\u6240\u6709\u5904\u7406\u5668\r\n     */\r\n    render() {\r\n        return this.handlers.reduce((content, handler) => handler(content), this.content)\r\n    }\r\n\r\n    /**\r\n     * \u6807\u9898\u5904\u7406\u5668\uFF0C\u5C06 Markdown \u6807\u9898\u8F6C\u6362\u4E3A\u5E26\u8868\u60C5\u7B26\u53F7\u7684\u683C\u5F0F\r\n     */\r\n    private titleHandler(content:string) {\r\n        return content.replace(/^(#+)\\s(.*)/gm, (match, level, title) => {\r\n            // \u6E05\u7406\u6807\u9898\u6587\u672C\uFF0C\u79FB\u9664\u672B\u5C3E\u7684 # \u7B26\u53F7\r\n            title = title.replace(/\\s+#+$/g, '');\r\n            const levelStr = (character: string) => new Array(Math.max(4-level.length, 1)).fill(character).join('')\r\n            // \u6839\u636E\u6807\u9898\u7EA7\u522B\uFF081-6\uFF09\u9009\u62E9\u5BF9\u5E94\u7684\u8868\u60C5\u7B26\u53F7\u88C5\u9970\r\n            const titleMark = levelStr('\uD83D\uDCCC')\r\n            // \u4F7F\u7528\u8868\u60C5\u7B26\u53F7\u5305\u88C5\u6807\u9898\u6587\u672C\r\n            return `${titleMark}${levelStr('>')} ${title} ${levelStr('<')}${titleMark}\\n\\n`;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * \u4EE3\u7801\u5757\u5904\u7406\u5668\uFF0C\u5C06\u4EE3\u7801\u5757\u8F6C\u6362\u4E3A\u5E26\u8868\u60C5\u7B26\u53F7\u7684\u683C\u5F0F\r\n     */\r\n    private codeBlockHandler(content:string) {\r\n        return content.replace(/^`{3,}(\\w*)\\n+([\\s\\S]*?)\\n`{3,}\\n/gm, (match, language, code) => {\r\n            return `\uD83D\uDCBB${language.length ? language+' ' : ''}Code\uD83D\uDCBB\r\n${code}\r\n\uD83D\uDCBBCode End!\uD83D\uDCBB`;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * \u5F15\u7528\u5757\u5904\u7406\u5668\uFF0C\u5C06\u5F15\u7528\u5757\u8F6C\u6362\u4E3A\u5E26\u8868\u60C5\u7B26\u53F7\u7684\u683C\u5F0F\r\n     */\r\n    private blockquoteHandler(content:string) {\r\n        return content.replace(/^>\\s(.*)/gm, (match, text) => {\r\n            return `\uD83D\uDCDC\u27A4 ${text}`;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * \u5206\u9694\u7EBF\u5904\u7406\u5668\uFF0C\u5C06\u5206\u9694\u7EBF\u8F6C\u6362\u4E3A\u5E26\u8868\u60C5\u7B26\u53F7\u7684\u683C\u5F0F\r\n    */\r\n    private hrHandler(content:string) {\r\n        return content.replace(/^-{3,}|_{3,}|\\*{3,}$/gm, () => {\r\n            return `\u2B50 \u2550\u2550\u2550\u2550\u2550\u2550\u2550 \u2B50 \u2550\u2550\u2550\u2550\u2550\u2550\u2550 \u2B50`;\r\n        })\r\n    }\r\n    /**\r\n     * \u65E0\u5E8F\u5217\u8868\u5904\u7406\u5668\uFF0C\u5C06\u65E0\u5E8F\u5217\u8868\u9879\u8F6C\u6362\u4E3A\u5E26\u8868\u60C5\u7B26\u53F7\u7684\u683C\u5F0F\r\n     */\r\n    private unorderedListHandler(content:string) {\r\n        return content.replace(/^([ \\t]*)[-+*] (.*)/gm, (match, space, text) => {\r\n            // \u6839\u636E\u7F29\u8FDB\u5C42\u7EA7\u9009\u62E9\u8868\u60C5\u7B26\u53F7\uFF1A\u65E0\u7F29\u8FDB\u4F7F\u7528\uD83D\uDD38\uFF0C\u6709\u7F29\u8FDB\u4F7F\u7528\uD83D\uDD39\r\n            return `${space}${ space.length? '\uD83D\uDD39' : '\uD83D\uDD38' } ${text}`;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * \u6709\u5E8F\u5217\u8868\u5904\u7406\u5668\uFF0C\u5C06\u6570\u5B57\u7F16\u53F7\u8F6C\u6362\u4E3A\u8868\u60C5\u7B26\u53F7\u6570\u5B57\r\n     */\r\n    private orderedListHandler(content:string) {\r\n        return content.replace(/^([ \\t]*)(\\d+)\\. (.*)/gm, (match, space, index, text) => {\r\n            // \u5B9A\u4E49\u6570\u5B57\u5BF9\u5E94\u7684\u8868\u60C5\u7B26\u53F7\u6620\u5C04\r\n            const numMarks = ['0\uFE0F\u20E3', '1\uFE0F\u20E3', '2\uFE0F\u20E3', '3\uFE0F\u20E3', '4\uFE0F\u20E3', '5\uFE0F\u20E3', '6\uFE0F\u20E3', '7\uFE0F\u20E3', '8\uFE0F\u20E3', '9\uFE0F\u20E3']\r\n            // \u5C06\u6570\u5B57\u8F6C\u6362\u4E3A\u5BF9\u5E94\u7684\u8868\u60C5\u7B26\u53F7\r\n            const indexMark = index.split('').map((num: string) => numMarks[parseInt(num)]).join('')\r\n            // \u7EC4\u5408\u6700\u7EC8\u7684\u5217\u8868\u9879\u683C\u5F0F\r\n            return `${space}${indexMark} ${text}`;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * \u884C\u5185\u6587\u672C\u6837\u5F0F\u5904\u7406\u5668\uFF0C\u5C06 Markdown \u884C\u5185\u6807\u8BB0\u8F6C\u6362\u4E3A\u5E26\u8868\u60C5\u7B26\u53F7\u7684\u683C\u5F0F\r\n     * @param content \u9700\u8981\u5904\u7406\u7684\u6587\u672C\u5185\u5BB9\r\n     * @returns \u5904\u7406\u540E\u7684\u6587\u672C\r\n     */\r\n    private spanTextHandler(content:string) {\r\n        return content\r\n            // \u5C06\u53CC\u661F\u53F7\u6216\u53CC\u4E0B\u5212\u7EBF\u5305\u88F9\u7684\u6587\u672C\u8F6C\u6362\u4E3A\u3010\u3011\u5305\u88F9\r\n            .replace(/\\*\\*(.+?)\\*\\*/g, '\u3010$1\u3011')\r\n            .replace(/__(.+?)__/g, '\u3010$1\u3011')\r\n            // \u5C06\u5355\u661F\u53F7\u6216\u5355\u4E0B\u5212\u7EBF\u5305\u88F9\u7684\u6587\u672C\u8F6C\u6362\u4E3A\u300E\u300F\u5305\u88F9\r\n            .replace(/\\*(.+?)\\*/g, '\u300E$1\u300F')\r\n            .replace(/_(.+?)_/g, '\u300E$1\u300F')\r\n            // \u5C06\u53CC\u6CE2\u6D6A\u7EBF\u5305\u88F9\u7684\u6587\u672C\u8F6C\u6362\u4E3A\u274C\u7B26\u53F7\u5305\u88F9\r\n            .replace(/~~(.+?)~~/g, '\u274C$1\u274C')\r\n            // \u5C06\u53CC\u7B49\u53F7\u5305\u88F9\u7684\u6587\u672C\u8F6C\u6362\u4E3A\uD83D\uDCA1\u7B26\u53F7\u5305\u88F9\r\n            .replace(/==(.+?)==/g, '\uD83D\uDCA1$1\uD83D\uDCA1')\r\n            // \u5C06\u53CD\u5F15\u53F7\u5305\u88F9\u7684\u6587\u672C\u8F6C\u6362\u4E3A\uD83D\uDCBB\u7B26\u53F7\u5305\u88F9\r\n            .replace(/`+(.+?)`+/g, '\uD83D\uDCBB$1\uD83D\uDCBB')\r\n    }\r\n    /**\r\n     * \u94FE\u63A5\u5904\u7406\u5668\uFF0C\u5C06 Markdown \u94FE\u63A5\u8F6C\u6362\u4E3A\u5E26\u8868\u60C5\u7B26\u53F7\u7684\u683C\u5F0F\r\n     * @param content \u9700\u8981\u5904\u7406\u7684\u6587\u672C\u5185\u5BB9\r\n     * @returns \u5904\u7406\u540E\u7684\u6587\u672C\r\n     */\r\n    private urlHandler(content:string) {\r\n        return content\r\n            // \u5904\u7406\u884C\u5185\u94FE\u63A5 [\u6587\u672C](URL)\r\n            .replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '\uD83D\uDD17\u3010$1\u3011( $2 )')\r\n            // \u5904\u7406\u5F15\u7528\u94FE\u63A5 [\u6587\u672C][\u5F15\u7528]\r\n            .replace(/\\[([^\\]]+)\\]\\[\\^?([^\\]]+)\\]/g, '\uD83D\uDD17\u3010$1\u3011[\uD83D\uDCCD$2]')\r\n    }\r\n}\r\n\r\n/**\r\n * \u5C06\u8F93\u5165\u7684 Markdown \u6587\u672C\u8F6C\u6362\u4E3A\u5E26\u6709\u8868\u60C5\u7B26\u53F7\u88C5\u9970\u7684\u683C\u5F0F\r\n * @param input - \u8F93\u5165\u7684 Markdown \u6587\u672C\r\n * @returns \u8F6C\u6362\u540E\u7684\u5E26\u8868\u60C5\u7B26\u53F7\u7684\u6587\u672C\uFF0C\u5982\u679C\u8F93\u5165\u4E3A\u7A7A\u5219\u8FD4\u56DE\u7A7A\u5B57\u7B26\u4E32\r\n */\r\nexport const EmojiMarkdown = (input: string) => {\r\n    // \u68C0\u67E5\u8F93\u5165\u662F\u5426\u4E3A\u7A7A\r\n    if (!input)  return '';\r\n    // \u521B\u5EFA\u6E32\u67D3\u5668\u5B9E\u4F8B\u5E76\u6267\u884C\u6E32\u67D3\r\n    return new markdownRender(input).render()\r\n}", "// \u4F7F\u7528\u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D\u4E2D\u6587\u4E0E\u82F1\u6587/\u6570\u5B57\u7684\u76F8\u90BB\u4F4D\u7F6E\uFF0C\u5E76\u5728\u5176\u95F4\u6DFB\u52A0\u7A7A\u683C\r\nconst replacer = (content:string) => content.replace(/([\\u4e00-\\u9fa5])([a-zA-Z0-9])|([a-zA-Z0-9])([\\u4e00-\\u9fa5])/g, '$1$3 $2$4');\r\n/**\r\n * \u5728\u4E2D\u6587\u548C\u82F1\u6587/\u6570\u5B57\u4E4B\u95F4\u6DFB\u52A0\u7A7A\u683C\r\n * @param input \u8F93\u5165\u7684\u5B57\u7B26\u4E32\r\n * @returns \u5904\u7406\u540E\u7684\u5B57\u7B26\u4E32\r\n */\r\nexport const WhiteSpace = (input: string) => {\r\n    // \u5982\u679C\u8F93\u5165\u4E3A\u7A7A\u5B57\u7B26\u4E32\uFF0C\u76F4\u63A5\u8FD4\u56DE\u7A7A\u5B57\u7B26\u4E32\r\n    if (input === '') return '';\r\n    // \u5BF9\u8F93\u5165\u5B57\u7B26\u4E32\u8FDB\u884C\u4E24\u6B21\u5904\u7406\uFF0C\u4EE5\u8986\u76D6\u5355\u4E2A\u6587\u5B57\u91CD\u53E0\u7684\u60C5\u51B5\uFF0C\u5982\uFF1AObsidian\u548CNotion\r\n    return replacer(replacer(input));\r\n}"],
  "mappings": "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",
  "names": []
}
