{
  "version": 3,
  "sources": ["../package.json", "../src/main.ts", "../src/actions/RemoveZeroWidthChars.ts", "../src/actions/CorrectCase.ts", "../src/actions/EmojiMarkdown.ts", "../src/actions/WhiteSpace.ts", "../src/actions/FormatExpression.ts"],
  "sourcesContent": ["{\r\n  \"name\": \"Snippet-Actions\",\r\n  \"version\": \"1.0.55\",\r\n  \"description\": \"\u6587\u672C\u7247\u6BB5\u5904\u7406\u5DE5\u5177\u96C6\u3002\",\r\n  \"main\": \"dist/main.js\",\r\n  \"repository\": \"https://github.com/dmscode/Snippet-Actions.git\",\r\n  \"author\": \"\u7A3B\u7C73\u9F20\",\r\n  \"scripts\": {\r\n    \"build\": \"yarn version --patch --no-git-tag-version && node build.js\",\r\n    \"test\": \"jest\",\r\n    \"test:watch\": \"jest --watch\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@types/jest\": \"^29.5.14\",\r\n    \"esbuild\": \"^0.19.11\",\r\n    \"fs-extra\": \"^11.3.0\",\r\n    \"jest\": \"^29.7.0\",\r\n    \"jest-html-reporters\": \"^3.1.7\",\r\n    \"ts-jest\": \"^29.3.1\",\r\n    \"typescript\": \"^5.8.2\"\r\n  },\r\n  \"license\": \"UNLICENSED\"\r\n}\r\n", "// \u4F7F\u7528 require \u5BFC\u5165 package.json\r\nconst pkg = require('../package.json');\r\nimport { RemoveZeroWidthChars } from \"./actions/RemoveZeroWidthChars\";\r\nimport { CorrectCase } from \"./actions/CorrectCase\";\r\nimport { EmojiMarkdown } from \"./actions/EmojiMarkdown\";\r\nimport { WhiteSpace } from \"./actions/WhiteSpace\";\r\nimport { FormatExpression } from \"./actions/FormatExpression\";\r\n\r\n/**\r\n * \u6587\u672C\u7247\u6BB5\u5904\u7406\u7C7B\r\n * \u63D0\u4F9B\u5355\u4E2A\u6216\u94FE\u5F0F\u5904\u7406\u6587\u672C\u7247\u6BB5\u7684\u529F\u80FD\r\n */\r\nexport class SnippetActions {\r\n    // \u53EF\u7528\u7684\u5904\u7406\u65B9\u6CD5\u96C6\u5408\r\n    actions = {\r\n        RemoveZeroWidthChars: {\r\n            name: '\u79FB\u9664\u96F6\u5BBD\u5B57\u7B26',\r\n            description: '\u79FB\u9664\u6587\u672C\u4E2D\u7684\u96F6\u5BBD\u5B57\u7B26',\r\n            action: RemoveZeroWidthChars,\r\n        },\r\n        CorrectCase: {\r\n            name: '\u4FEE\u6B63\u7279\u5B9A\u8BCD\u6C47\u7684\u5927\u5C0F\u5199',\r\n            description: '\u4FEE\u6B63\u6587\u672C\u4E2D\u7279\u5B9A\u8BCD\u6C47\u7684\u5927\u5C0F\u5199',\r\n            action: CorrectCase,\r\n        },\r\n        EmojiMarkdown: {\r\n            name: 'Markdown \u6587\u672C\u5316',\r\n            description: '\u5C06 Markdown \u8F6C\u6362\u4E3A\u7528 Emoji \u8FDB\u884C\u6807\u8BB0\u7684\u7EAF\u6587\u672C\u683C\u5F0F',\r\n            action: EmojiMarkdown,\r\n        },\r\n        WhiteSpace: {\r\n            name: '\u76D8\u53E4\u4E4B\u767D',\r\n            description: '\u5728\u4E2D\u6587\u548C\u82F1\u6587/\u6570\u5B57\u4E4B\u95F4\u6DFB\u52A0\u7A7A\u683C',\r\n            action: WhiteSpace,\r\n        },\r\n        FormatExpression: {\r\n            name: '\u683C\u5F0F\u5316\u8BA1\u7B97\u5F0F\uFF08Use\uFF09',\r\n            description: '\u66FF\u6362\u56E0\u4E3A\u8F93\u5165\u6CD5\u4E3A\u6B63\u786E\u5207\u6362\u800C\u4EA7\u751F\u7684\u5F02\u4F53\u5B57\u7B26',\r\n            action: FormatExpression,\r\n        },\r\n        FormatExpressionToDisplay: {\r\n            name: '\u683C\u5F0F\u5316\u8BA1\u7B97\u5F0F\uFF08Display\uFF09',\r\n            description: '\u5C06\u8FD0\u7B97\u7B26\u7B49\u66FF\u6362\u4E3A\u6807\u51C6\u7684\u6570\u5B66\u7B26\u53F7',\r\n            action: (input) => FormatExpression(input, true),\r\n        },\r\n    }\r\n    workflows = {\r\n        Markdown: {\r\n            name: 'Markdown \u6587\u672C\u5316',\r\n            description: '\u5C06 Markdown \u8F6C\u6362\u4E3A\u7528 Emoji \u8FDB\u884C\u6807\u8BB0\u7684\u7EAF\u6587\u672C\u683C\u5F0F',\r\n            actions: ['RemoveZeroWidthChars', 'WhiteSpace', 'CorrectCase', 'EmojiMarkdown'],\r\n        },\r\n        Format: {\r\n            name: '\u683C\u5F0F\u5316',\r\n            description: '\u79FB\u9664\u96F6\u5BBD\u5B57\u7B26\u3001\u5728\u4E2D\u6587\u548C\u82F1\u6587/\u6570\u5B57\u4E4B\u95F4\u6DFB\u52A0\u7A7A\u683C',\r\n            actions: ['RemoveZeroWidthChars', 'WhiteSpace', 'CorrectCase'],\r\n        },\r\n    }\r\n    // \u5F85\u5904\u7406\u7684\u8F93\u5165\u6587\u672C\r\n    input: string;\r\n    // \u5904\u7406\u9009\u9879\r\n    options: any;\r\n    // \u7248\u672C\r\n    version = pkg.version;\r\n\r\n    /**\r\n     * \u521D\u59CB\u5316\u4EE3\u7801\u7247\u6BB5\u5904\u7406\u7C7B\r\n     * @param input \u8F93\u5165\u6587\u672C\uFF0C\u4E3A\u7A7A\u65F6\u9ED8\u8BA4\u4E3A\u7A7A\u5B57\u7B26\u4E32\r\n     */\r\n    constructor(input: string) {\r\n        this.input = input || '';\r\n    }\r\n\r\n    /**\r\n     * \u6267\u884C\u5355\u4E2A\u5904\u7406\u65B9\u6CD5\r\n     * @param actionName \u5904\u7406\u65B9\u6CD5\u540D\u79F0\r\n     * @returns \u5904\u7406\u540E\u7684\u7ED3\u679C\r\n     */\r\n    runAction(actionName: keyof typeof this.actions) {\r\n        // \u8C03\u7528\u6307\u5B9A\u7684\u5904\u7406\u65B9\u6CD5\u5E76\u8FD4\u56DE\u7ED3\u679C\r\n        return this.actions[actionName].action(this.input);\r\n    }\r\n\r\n    /**\r\n     * \u6267\u884C\u6307\u5B9A\u7684\u5DE5\u4F5C\u6D41\u7A0B\r\n     * @param workflowName \u5DE5\u4F5C\u6D41\u540D\u79F0\r\n     * @returns \u6309\u5DE5\u4F5C\u6D41\u4E2D\u5B9A\u4E49\u7684\u52A8\u4F5C\u987A\u5E8F\u5904\u7406\u540E\u7684\u7ED3\u679C\r\n     */\r\n    runWorkflow(workflowName: keyof typeof this.workflows) {\r\n        // \u83B7\u53D6\u5DE5\u4F5C\u6D41\u4E2D\u5B9A\u4E49\u7684\u52A8\u4F5C\u5217\u8868\u5E76\u6309\u987A\u5E8F\u6267\u884C\r\n        return this.chain(this.workflows[workflowName].actions as (keyof typeof this.actions)[]);\r\n    }\r\n\r\n    /**\r\n     * \u94FE\u5F0F\u8C03\u7528\u591A\u4E2A\u5904\u7406\u65B9\u6CD5\r\n     * @param actions \u5904\u7406\u65B9\u6CD5\u6570\u7EC4\r\n     * @returns \u5904\u7406\u540E\u7684\u7ED3\u679C\r\n     */\r\n    chain(actions: (keyof typeof this.actions)[]) {\r\n        // \u4F7F\u7528reduce\u4F9D\u6B21\u6267\u884C\u5904\u7406\u65B9\u6CD5\uFF0C\u5C06\u4E0A\u4E00\u6B65\u7684\u7ED3\u679C\u4F5C\u4E3A\u4E0B\u4E00\u6B65\u7684\u8F93\u5165\r\n        return actions.reduce((result, actionName) => {\r\n            return this.actions[actionName].action(result);\r\n        }, this.input);\r\n    }\r\n\r\n    /**\r\n     * \u83B7\u53D6\u6240\u6709\u53EF\u7528\u7684\u52A8\u4F5C\u5217\u8868\r\n     * @returns \u5305\u542B\u6240\u6709\u53EF\u7528\u52A8\u4F5C\u4FE1\u606F\u7684\u5BF9\u8C61\r\n     */\r\n    getActions() {\r\n        return Object.entries(this.actions).reduce((acc, [key, value]) => {\r\n            acc[key] = {\r\n                name: value.name,\r\n                description: value.description\r\n            };\r\n            return acc;\r\n        }, {} as Record<string, { name: string; description: string }>);\r\n    }\r\n    /**\r\n     * \u83B7\u53D6\u6240\u6709\u53EF\u7528\u7684\u5DE5\u4F5C\u6D41\u5217\u8868\r\n     * @returns \u5305\u542B\u6240\u6709\u53EF\u7528\u5DE5\u4F5C\u6D41\u4FE1\u606F\u7684\u5BF9\u8C61\uFF0C\u6BCF\u4E2A\u5DE5\u4F5C\u6D41\u5305\u542B name \u548C description \u5C5E\u6027\r\n     */\r\n    getWorkflows() {\r\n        // \u5C06\u5DE5\u4F5C\u6D41\u5BF9\u8C61\u8F6C\u6362\u4E3A\u4EC5\u5305\u542B name \u548C description \u7684\u7B80\u5316\u5BF9\u8C61\r\n        return Object.entries(this.workflows).reduce((acc, [key, value]) => {\r\n            acc[key] = {\r\n                name: value.name,\r\n                description: value.description\r\n            };\r\n            return acc;\r\n        }, {} as Record<string, { name: string; description: string }>);\r\n    }\r\n}", "/**\r\n * \u79FB\u9664\u5B57\u7B26\u4E32\u4E2D\u7684\u4E0D\u53EF\u89C1\u7684 Unicode \u63A7\u5236\u5B57\u7B26\r\n * \u4E3B\u8981\u7528\u4E8E\u5904\u7406\u5728\u5FAE\u4FE1\u4E2D\u8F93\u5165 Markdown \u5217\u8868\u65F6\uFF0C\u81EA\u52A8\u6DFB\u52A0\u7684\u4E0D\u53EF\u89C1 Unicode \u63A7\u5236\u5B57\u7B26\u5BFC\u81F4\u7684\u6E32\u67D3\u9519\u8BEF\u95EE\u9898\u3002\r\n * \r\n * @param {string} input - \u9700\u8981\u5904\u7406\u7684\u8F93\u5165\u5B57\u7B26\u4E32\r\n * @returns {string} \u79FB\u9664\u4E86\u96F6\u5BBD\u5B57\u7B26\u540E\u7684\u5B57\u7B26\u4E32\r\n */\r\nexport function RemoveZeroWidthChars(input: string): string {\r\n    // \u5982\u679C\u8F93\u5165\u4E3A\u7A7A\uFF0C\u76F4\u63A5\u8FD4\u56DE\u7A7A\u5B57\u7B26\u4E32\r\n    if (!input) return '';\r\n    // \u5B9A\u4E49\u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D\u6240\u6709\u9700\u8981\u79FB\u9664\u7684\u5B57\u7B26\uFF1A\r\n    // - \\u200B-\\u200F: \u96F6\u5BBD\u5B57\u7B26\u8303\u56F4\r\n    // - \\uFEFF: BOM\u6807\u8BB0\r\n    // - \\u061C: \u963F\u62C9\u4F2F\u5B57\u6BCD\u683C\u5F0F\u63A7\u5236\u5B57\u7B26\r\n    // - \\u2060-\\u2069: \u4E0D\u53EF\u89C1\u7684\u8FDE\u63A5\u7B26\u548C\u683C\u5F0F\u63A7\u5236\u5B57\u7B26\r\n    // - \\uFFF9-\\uFFFB: \u5185\u5D4C\u5BF9\u8C61\u63A7\u5236\u5B57\u7B26\r\n    const pattern = /[\\u200B-\\u200F\\uFEFF\\u061C\\u2060-\\u2069\\uFFF9-\\uFFFB]+/g;\r\n    \r\n    // \u4F7F\u7528\u6B63\u5219\u66FF\u6362\u79FB\u9664\u5339\u914D\u5230\u7684\u5B57\u7B26\r\n    return input.replace(pattern, '');\r\n}", "const AI_ML_WORDS = [\r\n    'AI',\r\n    'Bard',\r\n    'ChatGLM',\r\n    'ChatGPT',\r\n    'Claude 3',\r\n    'Claude',\r\n    'Copilot',\r\n    'CUDA',\r\n    'DALL-E',\r\n    'DeepSeek',\r\n    'Diffusion',\r\n    'Gemini',\r\n    'GPT-3.5',\r\n    'GPT-3',\r\n    'GPT-4',\r\n    'GPT-4o',\r\n    'GPT-4V',\r\n    'GPT-J',\r\n    'Hugging Face',\r\n    'LangChain',\r\n    'Llama 2',\r\n    'Llama 3',\r\n    'LLaMA',\r\n    'LLM',\r\n    'Midjourney',\r\n    'NVIDIA',\r\n    'OpenAI',\r\n    'OpenRouter',\r\n    'Qwen',\r\n    'RAG',\r\n    'Stable Diffusion',\r\n];\r\n\r\nconst COMPANIES_BRANDS = [\r\n    'Amazon',\r\n    'Apple',\r\n    'Facebook',\r\n    'Google',\r\n    'LinkedIn',\r\n    'Microsoft',\r\n    'TikTok',\r\n    'Twitter',\r\n    'YouTube',\r\n    'Adobe',\r\n    'Airbnb',\r\n    'Alibaba',\r\n    'Alphabet',\r\n    'AMD',\r\n    'Baidu',\r\n    'ByteDance',\r\n    'Cisco',\r\n    'Dell',\r\n    'Dropbox',\r\n    'eBay',\r\n    'Figma',\r\n    'HP',\r\n    'Huawei',\r\n    'IBM',\r\n    'Intel',\r\n    'JetBrains',\r\n    'Lenovo',\r\n    'Meta',\r\n    'Mozilla',\r\n    'Netflix',\r\n    'NVIDIA',\r\n    'Oracle',\r\n    'PayPal',\r\n    'Qualcomm',\r\n    'Salesforce',\r\n    'Samsung',\r\n    'Shopify',\r\n    'Slack',\r\n    'Sony',\r\n    'Spotify',\r\n    'Stripe',\r\n    'Tencent',\r\n    'Tesla',\r\n    'Uber',\r\n    'Xiaomi',\r\n    'Zoom',\r\n];\r\n\r\nconst SOFTWARE_PRODUCTS = [\r\n    // Adobe \u7CFB\u5217\r\n    'Photoshop',\r\n    'Illustrator',\r\n    'XD',\r\n    'InDesign',\r\n    'Premiere Pro',\r\n    'After Effects',\r\n    'Lightroom',\r\n    'Acrobat',\r\n    'Audition',\r\n    'Animate',\r\n    'Dreamweaver',\r\n    'Bridge',\r\n    'Character Animator',\r\n    'Dimension',\r\n    'Media Encoder',\r\n\r\n    // \u529E\u516C\u8F6F\u4EF6\r\n    'Word',\r\n    'Excel',\r\n    'PowerPoint',\r\n    'Outlook',\r\n    'Access',\r\n    'OneNote',\r\n    'WPS',\r\n    'LibreOffice',\r\n    'OpenOffice',\r\n    'Pages',\r\n    'Numbers',\r\n    'Keynote',\r\n\r\n    // \u8BBE\u8BA1\u8F6F\u4EF6\r\n    'Sketch',\r\n    'Figma',\r\n    'CorelDRAW',\r\n    'Affinity',\r\n    'Affinity Designer',\r\n    'Affinity Photo',\r\n    'Affinity Publisher',\r\n    'Blender',\r\n    'Maya',\r\n    'Cinema 4D',\r\n    'SketchUp',\r\n    'AutoCAD',\r\n    'Rhino',\r\n\r\n    // \u5F71\u97F3\u8F6F\u4EF6\r\n    'VLC',\r\n    'Windows Media Player',\r\n    'QuickTime',\r\n    'PotPlayer',\r\n    'Audacity',    'Ableton Live',\r\n    'DaVinci Resolve',\r\n    'Final Cut Pro',\r\n    'iMovie',\r\n    'Vegas Pro',\r\n\r\n    // \u5B9E\u7528\u5DE5\u5177\r\n    'WinRAR',\r\n    '7-Zip',\r\n    'TeamViewer',\r\n    'AnyDesk',\r\n    'CCleaner',\r\n    'Malwarebytes',\r\n    'Everything',\r\n    'Snagit',\r\n    'Camtasia',\r\n    'OBS Studio',\r\n    'HandBrake',\r\n    'FileZilla',\r\n    'Rufus',\r\n    'Revo Uninstaller',\r\n    'Wordpress',\r\n]\r\n\r\nconst GAMES = [\r\n    'Minecraft',\r\n    'Among Us',\r\n    'Apex Legends',\r\n    'Call of Duty',\r\n    'Counter-Strike',\r\n    'CS:GO',\r\n    'CS2',\r\n    'Cyberpunk 2077',\r\n    'DOTA 2',\r\n    'Elden Ring',\r\n    'Fortnite',\r\n    'Genshin Impact',\r\n    'GTA V',\r\n    'Half-Life',\r\n    'Honkai: Star Rail',\r\n    'League of Legends',\r\n    'Mario',\r\n    'Overwatch',\r\n    'PUBG',\r\n    'Roblox',\r\n    'The Legend of Zelda',\r\n    'Valorant',\r\n    'World of Warcraft',\r\n]\r\n\r\nconst OPERATING_SYSTEMS = [\r\n    'Android',\r\n    'Arch',\r\n    'CentOS',\r\n    'Debian',\r\n    'Fedora',\r\n    'Gentoo',\r\n    'Linux',\r\n    'macOS',\r\n    'openSUSE',\r\n    'Ubuntu',\r\n    'Windows',\r\n    'iOS',\r\n    'iPadOS',\r\n    'tvOS',\r\n    'watchOS',\r\n    'AlmaLinux',\r\n    'Alpine',\r\n    'AmigaOS',\r\n    'Chrome OS',\r\n    'Deepin',\r\n    'elementary OS',\r\n    'FreeBSD',\r\n    'HarmonyOS',\r\n    'Kali Linux',\r\n    'KDE Neon',\r\n    'Kubuntu',\r\n    'Lubuntu',\r\n    'Manjaro',\r\n    'MX Linux',\r\n    'NetBSD',\r\n    'OpenBSD',\r\n    'Oracle Linux',\r\n    'Pop!_OS',\r\n    'RHEL',\r\n    'Rocky Linux',\r\n    'Solaris',\r\n    'SteamOS',\r\n    'Tails',\r\n    'Void Linux',\r\n    'Windows 10',\r\n    'Windows 11',\r\n    'Windows Server',\r\n    'Xubuntu',\r\n    'Zorin OS',\r\n];\r\n\r\nconst DEV_TOOLS_EDITORS = [\r\n    'Atom',\r\n    'Cursor',\r\n    'Emacs',\r\n    'Neovim',\r\n    'Sublime Text',\r\n    'VS Code',\r\n    'Vim',\r\n    'Notepad++',\r\n    'Android Studio',\r\n    'AppCode',\r\n    'Brackets',\r\n    'CLion',\r\n    'CodePen',\r\n    'CodeSandbox',\r\n    'DataGrip',\r\n    'Eclipse',\r\n    'Fleet',\r\n    'GoLand',\r\n    'IntelliJ IDEA',\r\n    'Jupyter',\r\n    'Komodo',\r\n    'Light Table',\r\n    'Nova',\r\n    'PhpStorm',\r\n    'PyCharm',\r\n    'Rider',\r\n    'RStudio',\r\n    'RubyMine',\r\n    'Spyder',\r\n    'TextMate',\r\n    'UltraEdit',\r\n    'Visual Studio',\r\n    'VSCodium',\r\n    'WebStorm',\r\n    'Xcode',\r\n    'Zed',\r\n];\r\n\r\nconst NOTE_KNOWLEDGE_TOOLS = [\r\n    'Excalidraw',\r\n    'Logseq',\r\n    'Notion',\r\n    'Obsidian',\r\n    'Roam Research',\r\n    'Trae',\r\n    'Typora',\r\n    'Zettlr',\r\n    'Agenda',\r\n    'Amplenote',\r\n    'Anytype',\r\n    'Athens Research',\r\n    'Bear',\r\n    'Capacities',\r\n    'Craft',\r\n    'DEVONthink',\r\n    'Dendron',\r\n    'Evernote',\r\n    'Fibery',\r\n    'Heptabase',\r\n    'Inkdrop',\r\n    'Joplin',\r\n    'MarginNote',\r\n    'Microsoft OneNote',\r\n    'Milanote',\r\n    'Miro',\r\n    'Nimbus Note',\r\n    'NotePlan',\r\n    'Notability',\r\n    'Notejoy',\r\n    'Notesnook',\r\n    'Reflect',\r\n    'RemNote',\r\n    'Scrintal',\r\n    'Standard Notes',\r\n    'Supernotes',\r\n    'Tana',\r\n    'TheBrain',\r\n    'Ulysses',\r\n    'WorkFlowy',\r\n];\r\n\r\nconst VERSION_CONTROL = [\r\n    'BitBucket',\r\n    'GitHub',\r\n    'GitLab',\r\n    'Azure DevOps',\r\n    'AWS CodeCommit',\r\n    'Beanstalk',\r\n    'Codebase',\r\n    'Gitea',\r\n    'Gogs',\r\n    'Launchpad',\r\n    'Mercurial',\r\n    'Perforce',\r\n    'Phabricator',\r\n    'Plastic SCM',\r\n    'RhodeCode',\r\n    'SourceForge',\r\n    'Subversion',\r\n    'Team Foundation Server',\r\n    'Gerrit',\r\n    'Git',\r\n    'SVN',\r\n    'CVS',\r\n];\r\n\r\nconst PROGRAMMING_LANGUAGES = [\r\n    'CSS',\r\n    'HTML',\r\n    'JSON',\r\n    'Java',\r\n    'JavaScript',\r\n    'LaTeX',\r\n    'Markdown',\r\n    'PHP',\r\n    'Python',\r\n    'TypeScript',\r\n    'XML',\r\n    'YAML',\r\n    'Ada',\r\n    'AppleScript',\r\n    'Assembly',\r\n    'Bash',\r\n    'COBOL',\r\n    'CoffeeScript',\r\n    'Crystal',\r\n    'Dart',\r\n    'Delphi',\r\n    'Elixir',\r\n    'Elm',\r\n    'Erlang',\r\n    'Fortran',\r\n    'Groovy',\r\n    'Haskell',\r\n    'Julia',\r\n    'Kotlin',\r\n    'Lisp',\r\n    'Lua',\r\n    'MATLAB',\r\n    'Objective-C',\r\n    'OCaml',\r\n    'Pascal',\r\n    'Perl',\r\n    'PowerShell',\r\n    'Prolog',\r\n    'Racket',\r\n    'Ruby',\r\n    'Rust',\r\n    'Scala',\r\n    'Scheme',\r\n    'Shell',\r\n    'SQL',\r\n    'Swift',\r\n    'Tcl',\r\n    'VB.NET',\r\n    'Visual Basic',\r\n    'WebAssembly',\r\n    'WASM',\r\n    'AsciiDoc',\r\n    'BBCode',\r\n    'CSV',\r\n    'DocBook',\r\n    'Graphviz',\r\n    'MediaWiki',\r\n    'reStructuredText',\r\n    'SVG',\r\n    'TOML',\r\n    'TSX',\r\n    'JSX',\r\n];\r\n\r\nconst DEV_FRAMEWORKS_TOOLS = [\r\n    'Angular',\r\n    'Docker',\r\n    'ESLint',\r\n    'Jest',\r\n    'Kubernetes',\r\n    'Node.js',\r\n    'React',\r\n    'Vue',\r\n    'npm',\r\n    'webpack',\r\n    'yarn',\r\n    'Ansible',\r\n    'Apollo',\r\n    'Astro',\r\n    'Babel',\r\n    'Bootstrap',\r\n    'Capacitor',\r\n    'Composer',\r\n    'Cordova',\r\n    'Cypress',\r\n    'Django',\r\n    'Electron',\r\n    'Ember.js',\r\n    'Express',\r\n    'FastAPI',\r\n    'Flask',\r\n    'Flutter',\r\n    'Gatsby',\r\n    'Git',\r\n    'GitFlow',\r\n    'Gradle',\r\n    'GraphQL',\r\n    'Gulp',\r\n    'Helm',\r\n    'Hugo',\r\n    'Ionic',\r\n    'Jenkins',\r\n    'jQuery',\r\n    'Laravel',\r\n    'Lerna',\r\n    'Lodash',\r\n    'Maven',\r\n    'Mocha',\r\n    'NestJS',\r\n    'Next.js',\r\n    'Nginx',\r\n    'NuGet',\r\n    'NuxtJS',\r\n    'Parcel',\r\n    'Playwright',\r\n    'Podman',\r\n    'Prettier',\r\n    'Prisma',\r\n    'Prometheus',\r\n    'Puppeteer',\r\n    'PyPI',\r\n    'Rails',\r\n    'Redux',\r\n    'Remix',\r\n    'RollupJS',\r\n    'RxJS',\r\n    'Sass',\r\n    'Selenium',\r\n    'Sentry',\r\n    'Serverless',\r\n    'Spring Boot',\r\n    'Storybook',\r\n    'Svelte',\r\n    'Tailwind CSS',\r\n    'Terraform',\r\n    'Three.js',\r\n    'TypeORM',\r\n    'Vite',\r\n    'Vitest',\r\n    'Vue Router',\r\n    'Vuex',\r\n    'Webpack',\r\n    'Xamarin',\r\n    'pnpm',\r\n];\r\n\r\nconst DATABASES = [\r\n    'MongoDB',\r\n    'MySQL',\r\n    'PostgreSQL',\r\n    'Redis',\r\n    'Amazon RDS',\r\n    'Apache Cassandra',\r\n    'Azure SQL',\r\n    'CockroachDB',\r\n    'Couchbase',\r\n    'DynamoDB',\r\n    'Elasticsearch',\r\n    'Firebase',\r\n    'InfluxDB',\r\n    'MariaDB',\r\n    'Microsoft SQL Server',\r\n    'Neo4j',\r\n    'Oracle Database',\r\n    'PlanetScale',\r\n    'RavenDB',\r\n    'SQLite',\r\n    'Supabase',\r\n    'Timescale',\r\n];\r\n\r\nconst CLOUD_SERVICES = [\r\n    'AWS',\r\n    'Azure',\r\n    'Google Cloud',\r\n    'Alibaba Cloud',\r\n    'Cloudflare',\r\n    'DigitalOcean',\r\n    'Heroku',\r\n    'IBM Cloud',\r\n    'Linode',\r\n    'Oracle Cloud',\r\n    'OVHcloud',\r\n    'Render',\r\n    'Tencent Cloud',\r\n    'Vercel',\r\n    'Vultr',\r\n];\r\n\r\nconst COMMAND_LINE_TOOLS = [\r\n    'Bash',\r\n    'PowerShell',\r\n    'cmd',\r\n    'cURL',\r\n    'Fish',\r\n    'Git Bash',\r\n    'iTerm2',\r\n    'Oh My Zsh',\r\n    'Terminal',\r\n    'Windows Terminal',\r\n    'Zsh',\r\n];\r\n\r\nconst BROWSERS = [\r\n    'Arc',\r\n    'Brave',\r\n    'Chrome',\r\n    'Edge',\r\n    'Firefox',\r\n    'Opera',\r\n    'Safari',\r\n    'Chromium',\r\n    'DuckDuckGo',\r\n    'Internet Explorer',\r\n    'Tor Browser',\r\n    'Vivaldi',\r\n];\r\n\r\nconst MOBILE_DEVICES = [\r\n    'iPad',\r\n    'iPhone',\r\n    'Android',\r\n    'Galaxy',\r\n    'Huawei',\r\n    'iPad Air',\r\n    'iPad mini',\r\n    'iPad Pro',\r\n    'iPhone SE',\r\n    'Kindle',\r\n    'Pixel',\r\n    'Surface',\r\n    'Xiaomi',\r\n];\r\n\r\nconst MESSAGING_SOCIAL = [\r\n    'Discord',\r\n    'Instagram',\r\n    'Slack',\r\n    'Telegram',\r\n    'WeChat',\r\n    'WhatsApp',\r\n    'BeReal',\r\n    'Bluesky',\r\n    'Facebook',\r\n    'Feishu',\r\n    'Flickr',\r\n    'Gitter',\r\n    'Google Chat',\r\n    'Google Meet',\r\n    'iMessage',\r\n    'Kakao Talk',\r\n    'LINE',\r\n    'LinkedIn',\r\n    'Mastodon',\r\n    'Matrix',\r\n    'Messenger',\r\n    'Microsoft Teams',\r\n    'Pinterest',\r\n    'QQ',\r\n    'Reddit',\r\n    'Signal',\r\n    'Skype',\r\n    'Snapchat',\r\n    'Threads',\r\n    'TikTok',\r\n    'Tumblr',\r\n    'Twitter',\r\n    'Viber',\r\n    'VK',\r\n    'WeiBo',\r\n    'X',\r\n    'YouTube',\r\n    'Zoom',\r\n];\r\n\r\nconst HARDWARE = [\r\n    'AMD',\r\n    'ARM',\r\n    'AirPods',\r\n    'Apple Watch',\r\n    'CPU',\r\n    'GPU',\r\n    'HDD',\r\n    'Intel',\r\n    'MacBook',\r\n    'MacBook Air',\r\n    'MacBook Pro',\r\n    'Mac mini',\r\n    'Mac Pro',\r\n    'NVIDIA',\r\n    'RAM',\r\n    'RTX',\r\n    'Raspberry Pi',\r\n    'SSD',\r\n    'ThinkPad',\r\n    'USB-C',\r\n];\r\n\r\nconst PROGRAMMING_CONCEPTS = [\r\n    'API',\r\n    'CRUD',\r\n    'DRY',\r\n    'DevOps',\r\n    'IoT',\r\n    'MVC',\r\n    'OOP',\r\n    'REST',\r\n    'SOLID',\r\n    'TDD',\r\n    'UI/UX',\r\n    'WebRTC',\r\n];\r\n\r\nconst NETWORK_PROTOCOLS = [\r\n    'DNS',\r\n    'FTP',\r\n    'GraphQL',\r\n    'HTTP',\r\n    'HTTPS',\r\n    'IMAP',\r\n    'IP',\r\n    'IPv4',\r\n    'IPv6',\r\n    'OAuth',\r\n    'POP3',\r\n    'REST',\r\n    'SMTP',\r\n    'SOAP',\r\n    'SSH',\r\n    'TCP',\r\n    'TCP/IP',\r\n    'UDP',\r\n    'WebRTC',\r\n    'WebSocket',\r\n];\r\n\r\nconst TECH_STANDARDS = [\r\n    'Bluetooth',\r\n    'DisplayPort',\r\n    'HDMI',\r\n    'NFC',\r\n    'USB',\r\n    'USB-A',\r\n    'USB-C',\r\n    'Type-C',\r\n    'VGA',\r\n    'Wi-Fi',\r\n];\r\n\r\nconst CRYPTO_BLOCKCHAIN = [\r\n    'Bitcoin',\r\n    'Blockchain',\r\n    'Coinbase',\r\n    'DAO',\r\n    'DApp',\r\n    'DeFi',\r\n    'Ethereum',\r\n    'MetaMask',\r\n    'NFT',\r\n    'Solana',\r\n    'Web3',\r\n];\r\n\r\n// \u5408\u5E76\u6240\u6709\u8BCD\u6C47\u8868\r\nconst CASE_SENSITIVE_WORDS = [\r\n    ...AI_ML_WORDS,\r\n    ...COMPANIES_BRANDS,\r\n    ...SOFTWARE_PRODUCTS,\r\n    ...GAMES,\r\n    ...OPERATING_SYSTEMS,\r\n    ...DEV_TOOLS_EDITORS,\r\n    ...NOTE_KNOWLEDGE_TOOLS,\r\n    ...VERSION_CONTROL,\r\n    ...PROGRAMMING_LANGUAGES,\r\n    ...DEV_FRAMEWORKS_TOOLS,\r\n    ...DATABASES,\r\n    ...CLOUD_SERVICES,\r\n    ...COMMAND_LINE_TOOLS,\r\n    ...BROWSERS,\r\n    ...MOBILE_DEVICES,\r\n    ...MESSAGING_SOCIAL,\r\n    ...HARDWARE,\r\n    ...PROGRAMMING_CONCEPTS,\r\n    ...NETWORK_PROTOCOLS,\r\n    ...TECH_STANDARDS,\r\n    ...CRYPTO_BLOCKCHAIN,\r\n];\r\n\r\n/**\r\n * \u5C06\u8F93\u5165\u7684\u8BCD\u5178\u6570\u7EC4\u8F6C\u6362\u4E3A Map \u5BF9\u8C61\uFF0C\u7528\u4E8E\u5927\u5C0F\u5199\u654F\u611F\u8BCD\u7684\u67E5\u627E\r\n * @param dict \u5305\u542B\u5927\u5C0F\u5199\u654F\u611F\u8BCD\u7684\u6570\u7EC4\r\n * @returns \u8FD4\u56DE\u4E00\u4E2A Map\uFF0Ckey \u4E3A\u5C0F\u5199\u8BCD\uFF0Cvalue \u4E3A\u539F\u59CB\u8BCD\r\n */\r\nconst getDict = (dict: string[]): Map<string, string> => {\r\n    // \u521B\u5EFA\u65B0\u7684 Map \u7528\u4E8E\u5B58\u50A8\u8BCD\u5178\r\n    const dictMap = new Map();\r\n    \r\n    dict.forEach((word) => {\r\n        // \u5C06\u5355\u8BCD\u8F6C\u6362\u4E3A\u5C0F\u5199\u4F5C\u4E3A\u952E\r\n        let key = word.toLowerCase();\r\n        dictMap.set(key, word);\r\n        \r\n        // \u5982\u679C\u5355\u8BCD\u5305\u542B\u975E\u5B57\u6BCD\u6570\u5B57\u5B57\u7B26\uFF0C\u521B\u5EFA\u4E00\u4E2A\u4E0D\u542B\u7279\u6B8A\u5B57\u7B26\u7684\u7248\u672C\u4F5C\u4E3A\u989D\u5916\u7684\u952E\r\n        if(/[- .]/.test(key)) {\r\n            dictMap.set(key.replace(/[- .]/, ''), word);\r\n        }\r\n    });\r\n    \r\n    return dictMap;\r\n}\r\n\r\n// \u4F7F\u7528\u9ED8\u8BA4\u8BCD\u5178\u521D\u59CB\u5316\r\nconst defaultDict = getDict(CASE_SENSITIVE_WORDS);\r\n\r\n/**\r\n * \u4FEE\u6B63\u6587\u672C\u4E2D\u5355\u8BCD\u7684\u5927\u5C0F\u5199\r\n * @param input \u9700\u8981\u5904\u7406\u7684\u8F93\u5165\u6587\u672C\r\n * @param dict \u81EA\u5B9A\u4E49\u8BCD\u5178\uFF08\u5B57\u7B26\u4E32\u6570\u7EC4\u6216Map\u5BF9\u8C61\uFF09\r\n * @returns \u4FEE\u6B63\u540E\u7684\u6587\u672C\r\n */\r\nexport const CorrectCase = (input: string, dict?: string[] | Map<string, string>) => {\r\n    // \u5904\u7406\u7A7A\u8F93\u5165\r\n    if(!input) return '';\r\n    // \u4F7F\u7528\u63D0\u4F9B\u7684\u8BCD\u5178\u6216\u9ED8\u8BA4\u8BCD\u5178\r\n    dict = dict instanceof Map ? dict : (Array.isArray(dict) ? getDict(dict) : defaultDict);\r\n    let result = input;\r\n    \r\n    // \u904D\u5386\u8BCD\u5178\u8FDB\u884C\u5927\u5C0F\u5199\u4FEE\u6B63\r\n    for (const [key, value] of dict.entries()) {\r\n        // \u5904\u7406\u7279\u6B8A\u5B57\u7B26\r\n        const regexKey = key.replace(/([+.])/g, '\\\\$1');\r\n        // \u521B\u5EFA\u5339\u914D\u6574\u4E2A\u5355\u8BCD\u7684\u6B63\u5219\u8868\u8FBE\u5F0F\uFF08\u4E0D\u533A\u5206\u5927\u5C0F\u5199\uFF09\uFF0C\u5982\u679C\u662F\u7279\u6B8A\u5B57\u7B26\u7ED3\u5C3E\uFF0C\u5219\u4E0D\u5339\u914D\u540E\u9762\u7684\u5355\u8BCD\u8FB9\u754C\u3002\r\n        const regex = new RegExp(`\\\\b${regexKey}${/[+.]$/.test(regexKey) ? '' : '\\\\b'}`, 'gi');\r\n        // \u5C06\u5339\u914D\u5230\u7684\u5355\u8BCD\u66FF\u6362\u4E3A\u8BCD\u5178\u4E2D\u7684\u6B63\u786E\u5F62\u5F0F\r\n        result = result.replace(regex, value);\r\n    }\r\n    \r\n    return result;\r\n}", "/**\r\n * Markdown \u6E32\u67D3\u5668\u7C7B\uFF0C\u7528\u4E8E\u5C06 Markdown \u6587\u672C\u8F6C\u6362\u4E3A\u5E26\u6709\u8868\u60C5\u7B26\u53F7\u88C5\u9970\u7684\u683C\u5F0F\r\n */\r\nclass markdownRender {\r\n    content: string\r\n    // \u5B9A\u4E49\u5904\u7406\u5668\u6570\u7EC4\uFF0C\u5305\u542B\u6807\u9898\u3001\u65E0\u5E8F\u5217\u8868\u548C\u6709\u5E8F\u5217\u8868\u7684\u5904\u7406\u65B9\u6CD5\r\n    handlers: any[] = [\r\n        this.titleHandler.bind(this),\r\n        this.codeBlockHandler.bind(this),\r\n        this.blockquoteHandler.bind(this),\r\n        this.hrHandler.bind(this),\r\n        this.unorderedListHandler.bind(this),\r\n        this.orderedListHandler.bind(this),\r\n        this.spanTextHandler.bind(this),\r\n        this.urlHandler.bind(this),\r\n    ]\r\n\r\n    constructor(content: string) {\r\n        this.content = content\r\n    }\r\n\r\n    /**\r\n     * \u6E32\u67D3\u65B9\u6CD5\uFF0C\u4F9D\u6B21\u6267\u884C\u6240\u6709\u5904\u7406\u5668\r\n     */\r\n    render() {\r\n        return this.handlers.reduce((content, handler) => handler(content), this.content)\r\n    }\r\n\r\n    /**\r\n     * \u6807\u9898\u5904\u7406\u5668\uFF0C\u5C06 Markdown \u6807\u9898\u8F6C\u6362\u4E3A\u5E26\u8868\u60C5\u7B26\u53F7\u7684\u683C\u5F0F\r\n     */\r\n    private titleHandler(content:string) {\r\n        return content.replace(/^(#+)\\s(.*)/gm, (match, level, title) => {\r\n            // \u6E05\u7406\u6807\u9898\u6587\u672C\uFF0C\u79FB\u9664\u672B\u5C3E\u7684 # \u7B26\u53F7\r\n            title = title.replace(/\\s+#+$/g, '');\r\n            const levelStr = (character: string) => new Array(Math.max(4-level.length, 1)).fill(character).join('')\r\n            // \u6839\u636E\u6807\u9898\u7EA7\u522B\uFF081-6\uFF09\u9009\u62E9\u5BF9\u5E94\u7684\u8868\u60C5\u7B26\u53F7\u88C5\u9970\r\n            const titleMark = levelStr('\uD83D\uDCCC')\r\n            // \u4F7F\u7528\u8868\u60C5\u7B26\u53F7\u5305\u88C5\u6807\u9898\u6587\u672C\r\n            return `${titleMark}${levelStr('>')} ${title} ${levelStr('<')}${titleMark}\\n\\n`;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * \u4EE3\u7801\u5757\u5904\u7406\u5668\uFF0C\u5C06\u4EE3\u7801\u5757\u8F6C\u6362\u4E3A\u5E26\u8868\u60C5\u7B26\u53F7\u7684\u683C\u5F0F\r\n     */\r\n    private codeBlockHandler(content:string) {\r\n        return content.replace(/^`{3,}(\\w*)\\r?\\n+([\\s\\S]*?)\\r?\\n`{3,}\\r?\\n/gm, (match, language, code) => {\r\n            return `\uD83D\uDCBB${language.length ? language+' ' : ''}Code\uD83D\uDCBB\r\n${code}\r\n\uD83D\uDCBBCode End!\uD83D\uDCBB`;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * \u5F15\u7528\u5757\u5904\u7406\u5668\uFF0C\u5C06\u5F15\u7528\u5757\u8F6C\u6362\u4E3A\u5E26\u8868\u60C5\u7B26\u53F7\u7684\u683C\u5F0F\r\n     */\r\n    private blockquoteHandler(content:string) {\r\n        return content.replace(/^>\\s(.*)/gm, (match, text) => {\r\n            return `\uD83D\uDCDC\u27A4 ${text}`;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * \u5206\u9694\u7EBF\u5904\u7406\u5668\uFF0C\u5C06\u5206\u9694\u7EBF\u8F6C\u6362\u4E3A\u5E26\u8868\u60C5\u7B26\u53F7\u7684\u683C\u5F0F\r\n    */\r\n    private hrHandler(content:string) {\r\n        return content.replace(/^-{3,}|_{3,}|\\*{3,}$/gm, () => {\r\n            return `\u2B50 \u2550\u2550\u2550\u2550\u2550\u2550\u2550 \u2B50 \u2550\u2550\u2550\u2550\u2550\u2550\u2550 \u2B50`;\r\n        })\r\n    }\r\n    /**\r\n     * \u65E0\u5E8F\u5217\u8868\u5904\u7406\u5668\uFF0C\u5C06\u65E0\u5E8F\u5217\u8868\u9879\u8F6C\u6362\u4E3A\u5E26\u8868\u60C5\u7B26\u53F7\u7684\u683C\u5F0F\r\n     */\r\n    private unorderedListHandler(content:string) {\r\n        const taskStatus = {\r\n            ' ': '\u2B1C',    // \u5F85\u529E\r\n            '/': '\uD83D\uDEA7',    // \u672A\u5B8C\u6210\r\n            'x': '\u2705',    // \u5DF2\u5B8C\u6210\r\n            '-': '\u274C',    // \u5DF2\u53D6\u6D88\r\n            '>': '\u2197\uFE0F',    // \u5DF2\u8F6C\u53D1\r\n            '<': '\uD83D\uDCC5',    // \u65E5\u7A0B\u5B89\u6392\r\n            '?': '\u2753',    // \u95EE\u9898\r\n            '!': '\u2757',    // \u91CD\u8981\r\n            '*': '\u2B50',    // \u661F\u6807\r\n            '\"': '\uD83D\uDCAC',    // \u5F15\u7528\r\n            'l': '\uD83D\uDCCD',    // \u4F4D\u7F6E\r\n            'b': '\uD83D\uDD16',    // \u4E66\u7B7E\r\n            'i': '\u2139\uFE0F',    // \u4FE1\u606F\r\n            'S': '\uD83D\uDCB0',    // \u50A8\u84C4\r\n            'I': '\uD83D\uDCA1',    // \u60F3\u6CD5\r\n            'p': '\uD83D\uDC4D',    // \u4F18\u70B9\r\n            'c': '\uD83D\uDC4E',    // \u7F3A\u70B9\r\n            'f': '\uD83D\uDD25',    // \u706B\u70ED\r\n            'k': '\uD83D\uDD11',    // \u5173\u952E\r\n            'w': '\uD83C\uDFC6',    // \u80DC\u5229\r\n            'u': '\uD83D\uDCC8',    // \u4E0A\u5347\r\n            'd': '\uD83D\uDCC9',    // \u4E0B\u964D\r\n        }\r\n        return content.replace(/^([ \\t]*)[-+*] +(.*)/gm, (match, space, text) => {\r\n            let isTask = false\r\n            // \u68C0\u67E5\u662F\u5426\u4E3A\u4EFB\u52A1\u5217\u8868\u9879\r\n            text = text.replace(/^\\[(.)\\]\\s+/, (match:string, status: string) => {\r\n                isTask = true\r\n                return (taskStatus[status as keyof typeof taskStatus] || `\u3010${status}\u3011`) + ' ';\r\n            })\r\n            // \u6839\u636E\u7F29\u8FDB\u5C42\u7EA7\u9009\u62E9\u8868\u60C5\u7B26\u53F7\uFF1A\u65E0\u7F29\u8FDB\u4F7F\u7528\uD83D\uDD3B\uFF0C\u6709\u7F29\u8FDB\u4F7F\u7528\uD83D\uDD39\r\n            return `${ space.length? '\uD83D\uDD39' : '\uD83D\uDD3B' }${isTask ? '' : ' '}${text}`;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * \u6709\u5E8F\u5217\u8868\u5904\u7406\u5668\uFF0C\u5C06\u6570\u5B57\u7F16\u53F7\u8F6C\u6362\u4E3A\u8868\u60C5\u7B26\u53F7\u6570\u5B57\r\n     */\r\n    private orderedListHandler(content:string) {\r\n        return content.replace(/^([ \\t]*)(\\d+)\\. (.*)/gm, (match, space, index, text) => {\r\n            // \u5B9A\u4E49\u6570\u5B57\u5BF9\u5E94\u7684\u8868\u60C5\u7B26\u53F7\u6620\u5C04\r\n            const numMarks = ['0\uFE0F\u20E3', '1\uFE0F\u20E3', '2\uFE0F\u20E3', '3\uFE0F\u20E3', '4\uFE0F\u20E3', '5\uFE0F\u20E3', '6\uFE0F\u20E3', '7\uFE0F\u20E3', '8\uFE0F\u20E3', '9\uFE0F\u20E3']\r\n            // \u5C06\u6570\u5B57\u8F6C\u6362\u4E3A\u5BF9\u5E94\u7684\u8868\u60C5\u7B26\u53F7\r\n            const indexMark = index.split('').map((num: string) => numMarks[parseInt(num)]).join('')\r\n            // \u7EC4\u5408\u6700\u7EC8\u7684\u5217\u8868\u9879\u683C\u5F0F\r\n            return `${space}${indexMark} ${text}`;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * \u884C\u5185\u6587\u672C\u6837\u5F0F\u5904\u7406\u5668\uFF0C\u5C06 Markdown \u884C\u5185\u6807\u8BB0\u8F6C\u6362\u4E3A\u5E26\u8868\u60C5\u7B26\u53F7\u7684\u683C\u5F0F\r\n     * @param content \u9700\u8981\u5904\u7406\u7684\u6587\u672C\u5185\u5BB9\r\n     * @returns \u5904\u7406\u540E\u7684\u6587\u672C\r\n     */\r\n    private spanTextHandler(content:string) {\r\n        return content\r\n            // \u5C06\u53CC\u661F\u53F7\u6216\u53CC\u4E0B\u5212\u7EBF\u5305\u88F9\u7684\u6587\u672C\u8F6C\u6362\u4E3A\u3010\u3011\u5305\u88F9\r\n            .replace(/\\*\\*(.+?)\\*\\*/g, '\u3010$1\u3011')\r\n            .replace(/__(.+?)__/g, '\u3010$1\u3011')\r\n            // \u5C06\u5355\u661F\u53F7\u6216\u5355\u4E0B\u5212\u7EBF\u5305\u88F9\u7684\u6587\u672C\u8F6C\u6362\u4E3A\u300E\u300F\u5305\u88F9\r\n            .replace(/\\*(.+?)\\*/g, '\u300E$1\u300F')\r\n            .replace(/_(.+?)_/g, '\u300E$1\u300F')\r\n            // \u5C06\u53CC\u6CE2\u6D6A\u7EBF\u5305\u88F9\u7684\u6587\u672C\u8F6C\u6362\u4E3A\u274C\u7B26\u53F7\u5305\u88F9\r\n            .replace(/~~(.+?)~~/g, '\u274C$1\u274C')\r\n            // \u5C06\u53CC\u7B49\u53F7\u5305\u88F9\u7684\u6587\u672C\u8F6C\u6362\u4E3A\uD83D\uDCA1\u7B26\u53F7\u5305\u88F9\r\n            .replace(/==(.+?)==/g, '\uD83D\uDCA1$1\uD83D\uDCA1')\r\n            // \u5C06\u53CD\u5F15\u53F7\u5305\u88F9\u7684\u6587\u672C\u8F6C\u6362\u4E3A\uD83D\uDCBB\u7B26\u53F7\u5305\u88F9\r\n            .replace(/`+(.+?)`+/g, '\uD83D\uDCBB$1\uD83D\uDCBB')\r\n    }\r\n    /**\r\n     * \u94FE\u63A5\u5904\u7406\u5668\uFF0C\u5C06 Markdown \u94FE\u63A5\u8F6C\u6362\u4E3A\u5E26\u8868\u60C5\u7B26\u53F7\u7684\u683C\u5F0F\r\n     * @param content \u9700\u8981\u5904\u7406\u7684\u6587\u672C\u5185\u5BB9\r\n     * @returns \u5904\u7406\u540E\u7684\u6587\u672C\r\n     */\r\n    private urlHandler(content:string) {\r\n        return content\r\n            // \u5904\u7406\u884C\u5185\u94FE\u63A5 [\u6587\u672C](URL)\r\n            .replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '\uD83D\uDD17\u3010$1\u3011( $2 )')\r\n            // \u5904\u7406\u5F15\u7528\u94FE\u63A5 [\u6587\u672C][\u5F15\u7528]\r\n            .replace(/\\[([^\\]]+)\\]\\[\\^?([^\\]]+)\\]/g, '\uD83D\uDD17\u3010$1\u3011[\uD83D\uDCCD$2]')\r\n    }\r\n}\r\n\r\n/**\r\n * \u5C06\u8F93\u5165\u7684 Markdown \u6587\u672C\u8F6C\u6362\u4E3A\u5E26\u6709\u8868\u60C5\u7B26\u53F7\u88C5\u9970\u7684\u683C\u5F0F\r\n * @param input - \u8F93\u5165\u7684 Markdown \u6587\u672C\r\n * @returns \u8F6C\u6362\u540E\u7684\u5E26\u8868\u60C5\u7B26\u53F7\u7684\u6587\u672C\uFF0C\u5982\u679C\u8F93\u5165\u4E3A\u7A7A\u5219\u8FD4\u56DE\u7A7A\u5B57\u7B26\u4E32\r\n */\r\nexport const EmojiMarkdown = (input: string) => {\r\n    // \u68C0\u67E5\u8F93\u5165\u662F\u5426\u4E3A\u7A7A\r\n    if (!input)  return '';\r\n    // \u521B\u5EFA\u6E32\u67D3\u5668\u5B9E\u4F8B\u5E76\u6267\u884C\u6E32\u67D3\r\n    return new markdownRender(input).render()\r\n}", "// \u4F7F\u7528\u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D\u4E2D\u6587\u4E0E\u82F1\u6587/\u6570\u5B57\u7684\u76F8\u90BB\u4F4D\u7F6E\uFF0C\u5E76\u5728\u5176\u95F4\u6DFB\u52A0\u7A7A\u683C\r\nconst replacer = (content:string) => content.replace(/([\\u4e00-\\u9fa5])([a-zA-Z0-9])|([a-zA-Z0-9])([\\u4e00-\\u9fa5])/g, '$1$3 $2$4');\r\n/**\r\n * \u5728\u4E2D\u6587\u548C\u82F1\u6587/\u6570\u5B57\u4E4B\u95F4\u6DFB\u52A0\u7A7A\u683C\r\n * @param input \u8F93\u5165\u7684\u5B57\u7B26\u4E32\r\n * @returns \u5904\u7406\u540E\u7684\u5B57\u7B26\u4E32\r\n */\r\nexport const WhiteSpace = (input: string) => {\r\n    // \u5982\u679C\u8F93\u5165\u4E3A\u7A7A\u5B57\u7B26\u4E32\uFF0C\u76F4\u63A5\u8FD4\u56DE\u7A7A\u5B57\u7B26\u4E32\r\n    if (input === '') return '';\r\n    // \u5BF9\u8F93\u5165\u5B57\u7B26\u4E32\u8FDB\u884C\u4E24\u6B21\u5904\u7406\uFF0C\u4EE5\u8986\u76D6\u5355\u4E2A\u6587\u5B57\u91CD\u53E0\u7684\u60C5\u51B5\uFF0C\u5982\uFF1AObsidian\u548CNotion\r\n    return replacer(replacer(input));\r\n}", "// \u5B9A\u4E49\u5F02\u4F53\u5B57\u7B26\u6620\u5C04\u8868\r\nconst VariantSymbols = new Map([\r\n    ['\uFF08', '('],\r\n    ['\uFF09', ')'],\r\n    ['\u3010', '['],\r\n    ['\u3011', ']'],\r\n    ['\u300A', '<'],\r\n    ['\u300B', '>'],\r\n    ['\uFF5B', '{'],\r\n    ['\uFF5D', '}'],\r\n    ['\uFF05', '%'],\r\n    ['\uFF0B', '+'],\r\n    ['\uFF0D', '-'],\r\n    ['\uFF0A', '*'],\r\n    ['\uFF0F', '/'],\r\n    ['\uFF1D', '='],\r\n    ['\uFF1C', '<'],\r\n    ['\uFF1E', '>'],\r\n    ['\uFF5E', '~'],\r\n    ['\uFF01', '!'],\r\n    ['\uFF1A', ':'],\r\n    ['\uFF5C', '|'],\r\n    ['\uFF3E', '^'],\r\n    ['\uFF0E', '.'],\r\n    ['\uFF0C', ','],\r\n    ['\uFF1B', ';'],\r\n    ['\uFF3F', '_'],\r\n    ['\uFF03', '#'],\r\n    ['\uFF06', '&'],\r\n    ['\uFF20', '@'],\r\n    ['\uFF04', '$'],\r\n    ['==', '='],\r\n])\r\n// \u7528\u6765\u663E\u793A\u7684\u6807\u51C6\u5B57\u7B26\u6620\u5C04\u8868\r\nconst StandardSymbols = new Map([\r\n    ['>=', '\u2265'],\r\n    ['<=', '\u2264'],\r\n    ['!=', '\u2260'],\r\n    ['~=', '\u2248'],\r\n    ['+-', '\u00B1'],\r\n    ['-+', '\u2213'],\r\n    ['*', '\u00D7'],\r\n    ['/', '\u00F7'],\r\n    ['pi', '\u03C0'],\r\n    ['alpha', '\u03B1'],\r\n    ['beta', '\u03B2'],\r\n    ['gamma', '\u03B3'],\r\n    ['delta', '\u03B4'],\r\n    ['theta', '\u03B8'],\r\n    ['lambda', '\u03BB'],\r\n    ['sigma', '\u03C3'],\r\n    ['omega', '\u03C9'],\r\n    ['inf', '\u221E'],\r\n    ['sqrt', '\u221A'],\r\n    ['->>', '\u27F9'],\r\n    ['<->', '\u2194'],\r\n    ['->', '\u2192'],\r\n    ['<-', '\u2190'],\r\n    ['<=>', '\u21D4'],\r\n    ['=>', '\u21D2'],\r\n    ['=<', '\u21D0'],\r\n    ['sum', '\u2211'],\r\n    ['prod', '\u220F'],\r\n    ['int', '\u222B'],\r\n    ['union', '\u222A'],\r\n    ['inter', '\u2229'],\r\n    ['in', '\u2208'],\r\n    ['notin', '\u2209'],\r\n    ['subset', '\u2282'],\r\n    ['supset', '\u2283'],\r\n    ['empty', '\u2205'],\r\n    ['...', '\u2026'],\r\n    ['||', '\u2225'],\r\n    ['deg', '\u00B0'],\r\n])\r\n\r\n\r\n/**\r\n * \u683C\u5F0F\u5316\u8868\u8FBE\u5F0F\uFF0C\u5C06\u5F02\u4F53\u5B57\u7B26\u8F6C\u6362\u4E3A\u6807\u51C6\u5B57\u7B26\uFF0C\u5E76\u53EF\u9009\u62E9\u6027\u5730\u8F6C\u6362\u4E3A\u663E\u793A\u6A21\u5F0F\r\n * @param input \u8F93\u5165\u7684\u8868\u8FBE\u5F0F\u5B57\u7B26\u4E32\r\n * @param displayMode \u662F\u5426\u542F\u7528\u663E\u793A\u6A21\u5F0F\uFF0C\u9ED8\u8BA4\u4E3A false\r\n * @returns \u683C\u5F0F\u5316\u540E\u7684\u8868\u8FBE\u5F0F\u5B57\u7B26\u4E32\r\n */\r\nexport const FormatExpression = (input: string, displayMode:boolean = false) => {\r\n    // \u5982\u679C\u8F93\u5165\u4E3A\u7A7A\uFF0C\u76F4\u63A5\u8FD4\u56DE\u7A7A\u5B57\u7B26\u4E32\r\n    if (!input) return '';\r\n\r\n    // \u53BB\u9664\u8F93\u5165\u5B57\u7B26\u4E32\u4E24\u7AEF\u7684\u7A7A\u767D\u5B57\u7B26\r\n    let result = input.trim();\r\n    \r\n    // \u5C06\u5F02\u4F53\u5B57\u7B26\u66FF\u6362\u4E3A\u5BF9\u5E94\u7684\u6807\u51C6\u5B57\u7B26\uFF08\u5982\u5168\u89D2\u62EC\u53F7\u66FF\u6362\u4E3A\u534A\u89D2\u62EC\u53F7\uFF09\r\n    for (const [variant, standard] of VariantSymbols) {\r\n        result = result.replaceAll(variant, standard);\r\n    }\r\n    \r\n    // \u5728\u663E\u793A\u6A21\u5F0F\u4E0B\uFF0C\u5C06\u6807\u51C6\u7B26\u53F7\u66FF\u6362\u4E3A\u66F4\u6613\u8BFB\u7684\u6570\u5B66\u7B26\u53F7\uFF08\u5982 >= \u66FF\u6362\u4E3A \u2265\uFF09\r\n    if (displayMode) {\r\n        for (const [standard, variant] of StandardSymbols) {\r\n            result = result.replaceAll(standard, variant);\r\n        }\r\n    }\r\n    \r\n    return result;\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,QACE,MAAQ;AAAA,QACR,SAAW;AAAA,QACX,aAAe;AAAA,QACf,MAAQ;AAAA,QACR,YAAc;AAAA,QACd,QAAU;AAAA,QACV,SAAW;AAAA,UACT,OAAS;AAAA,UACT,MAAQ;AAAA,UACR,cAAc;AAAA,QAChB;AAAA,QACA,iBAAmB;AAAA,UACjB,eAAe;AAAA,UACf,SAAW;AAAA,UACX,YAAY;AAAA,UACZ,MAAQ;AAAA,UACR,uBAAuB;AAAA,UACvB,WAAW;AAAA,UACX,YAAc;AAAA,QAChB;AAAA,QACA,SAAW;AAAA,MACb;AAAA;AAAA;;;ACtBA;AAAA;AAAA;AAAA;;;ACOO,WAAS,qBAAqB,OAAuB;AAExD,QAAI,CAAC;AAAO,aAAO;AAOnB,UAAM,UAAU;AAGhB,WAAO,MAAM,QAAQ,SAAS,EAAE;AAAA,EACpC;;;ACpBA,MAAM,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AAEA,MAAM,mBAAmB;AAAA,IACrB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AAEA,MAAM,oBAAoB;AAAA;AAAA,IAEtB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAGA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAGA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAGA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IAAe;AAAA,IACf;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAGA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AAEA,MAAM,QAAQ;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AAEA,MAAM,oBAAoB;AAAA,IACtB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AAEA,MAAM,oBAAoB;AAAA,IACtB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AAEA,MAAM,uBAAuB;AAAA,IACzB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AAEA,MAAM,kBAAkB;AA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",
  "names": ["match"]
}
